[project]
name = "conda_tool"
dynamic = ["version"]
description = "Conda Tool for download recipe, exctract constructor sh package, modify conda package."
readme = "README.md"
requires-python = ">=3.10"
authors = [{ name = "FSSlc", email = "fsslc235@gmail.com" }]
classifiers = [
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "ruamel-yaml>=0.18.6",
    "colorama>=0.4.6",
    "packaging>=24.1",
    "pathspec>=0.12.1",
    "zstandard>=0.23.0",
    "rich>=13.9.2",
    "msgpack>=1.1.0",
]
license = { text = "MIT" }

[project.urls]
Repository = "https://github.com/FSSlc/conda_tool"

[project.scripts]
ct_makedb = "conda_tool.makedb:main"
ct_dlpkg = "conda_tool.dlpkg:main"
ct_extract = "conda_tool.extract:main"
ct_modify = "conda_tool.modify:main"

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.pdm]
distribution = true
version = { source = "file", path = "src/conda_tool/__init__.py" }

[tool.pdm.build]
source-includes = ["tests/", "scripts/"]

[tool.pdm.dev-dependencies]
lint = [
    "pylint>=3.2.7",
    "ruff>=0.7.0",
]
dev = [
    "ipython>=8.12.3",
]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
    "W191", # indentation contains tabs
]

# [tool.ruff.lint.per-file-ignores]
# "__init__.py" = ["F401"]


[tool.ruff.lint.isort]
known-third-party = []

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true
